---
- name: Install packages
  yum:
    name: "{{ item.name }}"
    state: present
  with_items:
    - name: createrepo
    - name: rpm-build
    - name: policycoreutils-python
    - name: setools-console
    - name: httpd
    - name: setools-console
    - name: libselinux-python
    - name: mod_ssl
    - name: repoview

- name: Check repo path
  file:
    path: "{{ rpm_repo_path }}/{{ item.0 }}/{{ item.1 }}"
    state: directory
    mode: 0750
    owner: apache
    group: apache
    recurse: true
  loop: "{{ rpm_repo_architecture|product(rpm_repo_version)|list }}"

- name: Createrepo
  command: "createrepo {{ rpm_repo_path }}/{{ item.0 }}/{{ item.1 }}"
  loop: "{{ rpm_repo_architecture|product(rpm_repo_version)|list }}"

- name: Symlink
  file:
    src: "{{ rpm_repo_path }}"
    dest: "{{ rpm_repo_httpd_path }}"
    state: link

- name: Copy gpg key
  copy:
    src: "/etc/pki/rpm-gpg/RPM-GPG-KEY-{{ rpm_repo_name }}"
    dest: "{{ rpm_repo_httpd_path }}/RPM-GPG-KEY-{{ rpm_repo_name }}"
    owner: apache
    group: apache
    mode: 0644

- name: Templating apache conf file
  template:
    src: templates/repo.conf.j2
    dest: "{{ rpm_repo_httpd_conf_dir }}/repo.conf"
    owner: root
    group: root
    mode: 0644

# - name: Set 'httpd_sys_content_t' context for "{{ path_repo }}"
#   sefcontext:
#     target: '/{{ path_repo }}(/.*)?'
#     setype: httpd_sys_content_t
#     reload: True
#     state: present

- name: Check repo path
  file:
    path: "{{ rpm_repo_path }}/"
    state: directory
    mode: 0750
    owner: apache
    group: apache
    recurse: true


# - name: Set 'httpd_sys_content_t' context for "{{ path_repo }}" (1/2)
#   command: semanage fcontext -a -t httpd_sys_content_t '/"{{ path_repo }}"(/.*)?'

#
# - name: Set 'httpd_sys_content_t' context for "{{ path_repo }}" (2/2)
#   command: restorecon -RF /"{{ path_repo }}"


- name: Start service httpd, if not running
  service:
    name: httpd
    state: restarted


- name: Create cron task for metadata
  cron:
    name: createrepo
    special_time: hourly
    user: root
    job: "createrepo -d {{ rpm_repo_path }} > /dev/null"
    cron_file: createrepo


- name: Create cron task for metadata
  cron:
    name: repoview
    special_time: hourly
    user: root
    job: "repoview {{ rpm_repo_path }} > /dev/null"
    cron_file: repoview
