---
- name: Install packages for packages signing
  yum:
    name: "{{ item.name }}"
    state: present
  with_items:
    - name: openssl-devel
    - name: gcc
    - name: mod_ssl
    - name: rng-tools
    - name: open-vm-tools
    - name: rng-tools
    - name: libselinux-python
    - name: expect

- name: Create temporary directory
  file:
    path: "{{ __temp_dir }}"
    state: directory
    mode: 0755

- name: Remove all previous GPG keys
  script: "{{ role_path }}/files/remove_all_gpg_keys.sh"
  when: rpm_repository_regenerate_gpg_key
  changed_when: false

- name: Encore that GPG user directory exists
  file:
    path: ~/.gnupg
    state: directory
    mode: 0700

- name: Get process PID of gpg-agent
  shell: pgrep gpg-agent
  changed_when: false
  register: gpgagentproc
  failed_when: "gpgagentproc.rc == 2 or gpgagentproc.rc == 3"

- name: Ensure that GPG agent is started
  command: gpg-agent --daemon --use-standard-socket --pinentry-program /usr/bin/pinentry-curses
  when: gpgagentproc is undefined

- name: Check repository GPG key
  stat: "path=/etc/pki/rpm-gpg/RPM-GPG-KEY-{{ rpm_repository_name }}"
  register: gpgkey

# - name: start rngd for entropy creation
#   command: rngd -b -r /dev/urandom
#   when: gpgkey.stat.exists == False or rpm_repository_regenerate_gpg_key

- name: Start rngd for entropy creation
  systemd: state=started name=rngd

- name: Templating with repository informations
  template:
    src: "{{ role_path }}/templates/gen-key-script.j2"
    dest: "{{ __temp_dir}}/gen-key-script"
    owner: root
    group: root
    mode: 0644
  when: gpgkey.stat.exists == false or rpm_repository_regenerate_gpg_key

- name: Generate GPG key with repository information
  command: "gpg --expert --batch --gen-key {{ __temp_dir }}/gen-key-script"
  when: gpgkey.stat.exists == false or rpm_repository_regenerate_gpg_key
  changed_when: false

- name: Export GPG key with repository information
  shell: "gpg --export --armor {{ rpm_repository_name }} > /etc/pki/rpm-gpg/RPM-GPG-KEY-{{ rpm_repository_name }}"
  register: gpgkey.stat.exists == false or rpm_repository_regenerate_gpg_key
  changed_when: false

- name: Import GPG key with repository information into rpm db
  rpm_key:
    state: present
    key: "/etc/pki/rpm-gpg/RPM-GPG-KEY-{{ rpm_repository_name }}"
  when: gpgkey.stat.exists == false or rpm_repository_regenerate_gpg_key

- name: Templating .rpmmacro with default key
  template:
    src: "{{ role_path }}/templates/.rpmmacros.j2"
    dest: ~/.rpmmacros
    owner: root
    group: root
    mode: 0400
  when: gpgkey.stat.exists == false or rpm_repository_regenerate_gpg_key

- name: Delete temporary directory
  file:
    path: "{{ __temp_dir }}"
    state: directory
